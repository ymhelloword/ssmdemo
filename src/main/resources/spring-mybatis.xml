<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
                        http://www.springframework.org/schema/context
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 引入数据库配置文件 -->
    <bean id = "propertyConfigurer"
          class = "org.springframework.beans.factory.config.PreferencesPlaceholderConfigurer">
        <property name = "location" value="classpath:db.properties" />
    </bean>

    <bean id="dataSourceHikari" class="com.zaxxer.hikari.HikariDataSource"  destroy-method="close">
         <property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />   <!--无需指定，除非系统无法自动识别-->
        <property name="jdbcUrl" value="jdbc:mysql://47.102.151.46:3306/nyg?useUnicode=true;characterEncoding=UTF-8" />
        <property name="username" value="root" />
        <property name="password" value="MyNewPass4!" />
        <!-- 连接只读数据库时配置为true， 保证安全 -->
        <property name="readOnly" value="false" />
        <!-- 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 缺省:30秒 -->
        <property name="connectionTimeout" value="30000" />
        <!-- 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），缺省:10分钟 -->
        <property name="idleTimeout" value="600000" />
        <!-- 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），缺省:30分钟，建议设置比数据库超时时长少30秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->
        <property name="maxLifetime" value="1800000" />
        <!-- 连接池中允许的最大连接数。缺省值：10；推荐的公式：((core_count * 2) + effective_spindle_count) -->
        <property name="maximumPoolSize" value="15" />
    </bean>
    <!-- 结合Spring和Mybatis -->
    <bean id = "sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSourceHikari" />
        <!-- 自动扫描mapping.xml文件 -->
        <property name = "mapperLocations" value="classpath:mapping/*Mapping.xml" />
        <!--类型别名包，默认引入com.zhangguo.Spring61.entities下的所有类 -->
        <property name="typeAliasesPackage" value="com.nyg.ssm.entity"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <!--自动扫描映射接口-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 指定sql会话工厂，在上面配置过的 -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 指定基础包，即自动扫描com.zhangguo.Spring61.mapping这个包以及它的子包下的所有映射接口类 -->
        <property name="basePackage" value="com.nyg.ssm.dao"/>
    </bean>
    <!-- 定义事务 -->
    <bean id = "transactionManager"
          class = "org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name = "dataSource" ref = "dataSourceHikari" />
    </bean>
    <!-- 使用注解定义事务 -->
    <tx:annotation-driven transaction-manager = "transactionManager" />
    <!-- <tx:advice id="adviceTest" transaction-manager="transactionManager">
         <tx:attributes>
             <tx:method name="find*" propagation="REQUIRED"/>
         </tx:attributes>
     </tx:advice>
     <aop:config>
         <aop:pointcut id="pointcut" expression="execution(* com.spring_mybatis.dao.*.*(..))"/>
         <aop:advisor advice-ref="adviceTest" pointcut-ref="pointcut"/>
     </aop:config>-->
</beans>
